{"version":3,"sources":["CarItem.js","Cars.js","Navigation.js","CarPers.js","parts.js","App.js","serviceWorker.js","index.js"],"names":["CarItem","props","this","cars","map","car","className","key","id","src","alt","to","React","Component","Cars","state","carsAreLoaded","axios","get","then","res","Object","values","data","setState","role","Navigation","activeClassName","CarPers","match","params","console","log","Parts","search","e","target","value","sortByPrice","checked","isSortByPrice","parts","partsAreLoaded","partsOut","length","filter","partS","toUpperCase","includes","part","type","placeholder","name","onChange","htmlFor","scope","Home","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7ec29a30.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nclass CarItem extends React.Component{\r\n    \r\n    render(props){\r\n        return(\r\n            this.props.cars.map((car) =>\r\n          \r\n            <div className=\"card col-4\" key={car.id}>\r\n                    <img src={car[\"wpcf-image-car-for-slider\"]} className=\"card-img-top\" alt=\"...\" />\r\n                    <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{car[\"title\"][\"rendered\"]}</h5>\r\n        <p className=\"card-text\">{car[\"_aioseop_description\"]}</p>\r\n        <Link to={'/cars/' + car.id} className=\"btn btn-primary\">Узнать больше</Link>\r\n                    </div>\r\n                </div>\r\n                   )\r\n        )\r\n    }\r\n}\r\nexport default CarItem","import React from 'react';\r\nimport axios from 'axios';\r\nimport CarItem from './CarItem';\r\n\r\nclass  Cars extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cars : [],\r\n            carsAreLoaded: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(`https://avtopremier.net/wp-json/wp/v2/haval_auto/`)\r\n          .then(res => {\r\n            let cars = Object.values(res.data);\r\n\r\n            this.setState({ cars, carsAreLoaded:true });\r\n          })\r\n      }\r\n            \r\n    render(){\r\n        return (\r\n            <div className=\"row container\">\r\n                  <div className={this.state.carsAreLoaded ? \"d-none\" : \"d-block\"}>  <div className=\"spinner-border\" role=\"status\">\r\n  <span className=\"sr-only\">Loading...</span>\r\n</div></div>\r\n            <CarItem cars={this.state.cars} />  \r\n            </div>\r\n               \r\n        )    \r\n    }\r\n}\r\nexport default Cars;","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navigation =  (props) => {\r\n    return(\r\n        <ul className=\"nav\">\r\n  <li className=\"nav-item\">\r\n    <NavLink to=\"/\" className=\"nav-link\" >Главная</NavLink>\r\n  </li>\r\n  <li className=\"nav-item\">\r\n    <NavLink to=\"/cars\" className=\"nav-link text-dark\" activeClassName=\"bg-danger text-white\" >Автомобили</NavLink>\r\n  </li>\r\n  <li className=\"nav-item\">\r\n    <NavLink to=\"/parts\" className=\"nav-link text-dark\" activeClassName=\"bg-danger text-white\" >Запчасти</NavLink>\r\n  </li>\r\n</ul>\r\n    )\r\n}\r\nexport default Navigation;","import React from 'react'\r\nimport axios from 'axios';\r\nclass CarPers extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            car: {}\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        axios.get(`https://avtopremier.net/wp-json/wp/v2/haval_auto/${this.props.match.params.id}/`)\r\n          .then(res => {\r\n            let car = res.data;\r\n        \r\n            this.setState({ car });\r\n          })\r\n      }\r\n    render(props){\r\n        let car = this.state.car\r\n        console.log(car)\r\n        return(\r\n            <div className=\"row\">\r\n                <img src={car[\"wpcf-image-car-for-slider\"]} alt=\"\" />\r\n        {/* <p>Модель: {car[\"title\"][\"rendered\"]}</p> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default CarPers","import React from 'react'\r\nimport axios from 'axios'\r\nclass Parts extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            parts : [],\r\n            partsAreLoaded : false,\r\n            search : \"\",\r\n            isSortByPrice : false\r\n        }\r\n    }\r\n   search = e=>{\r\n    console.log(e.target.value)\r\n    this.setState(\r\n        {\r\n            search : e.target.value\r\n        }\r\n    )\r\n   }\r\n   sortByPrice = e =>{\r\n       console.log(e.target.checked)\r\n       e.target.checked ? this.setState({isSortByPrice: true}) :  this.setState({isSortByPrice: false})\r\n    //    if (e.target.checked){\r\n    //        this.setState({\r\n    //            isSortByPrice: true\r\n    //        })\r\n    //    }\r\n    //    else\r\n   }\r\n    componentDidMount() {\r\n        axios.get(`https://avtopremier.net/wp-json/wp/v2/table?per_page=99`)\r\n          .then(res => {\r\n            let parts = Object.values(res.data);\r\n            \r\n            this.setState({ parts, partsAreLoaded: true });\r\n          })\r\n      }\r\n      \r\n    render(){\r\n    let partsOut;\r\n        if (this.state.search.length > 0){\r\n            partsOut =  this.state.parts.filter(partS => partS[\"title\"][\"rendered\"].toUpperCase().includes(this.state.search.toUpperCase())).map((part) =>\r\n            <tr key={part.id}>\r\n            <td>{part[\"parthnumber\"]}</td>\r\n            <td>{part[\"title\"][\"rendered\"]}</td>\r\n            <td>{part[\"price_of_part\"]}</td>\r\n           </tr>\r\n           \r\n             )\r\n        }\r\n        else{\r\n            partsOut =  this.state.parts.map((part) =>\r\n                <tr key={part.id}>\r\n                <td>{part[\"parthnumber\"]}</td>\r\n                <td>{part[\"title\"][\"rendered\"]}</td>\r\n                <td>{part[\"price_of_part\"]}</td>\r\n               </tr>\r\n               \r\n                 )\r\n            console.log('пустой')\r\n        }\r\n        \r\n        return(\r\n            <div>\r\n             <input type=\"text\" className=\"form-control my-5\" placeholder=\"Search\" name=\"search\" value={this.state.search} onChange={this.search}/> \r\n             <label htmlFor=\"check\">Отсортировать по цене?</label><input type=\"checkbox\" name=\"check\" className=\"form-control d-flex\" onChange={this.sortByPrice}/>\r\n        <div>Запрос поиска:  {this.state.search}</div>\r\n                <table className=\"table\">\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\">Артикль</th>\r\n      <th scope=\"col\">Наименование</th>\r\n      <th scope=\"col\">Цена</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr className={this.state.partsAreLoaded ? \"d-none\" : \"d-block\"}>  \r\n  \r\n    \r\n        <td className=\"spinner-grow\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </td>\r\n    </tr>\r\n\r\n  {partsOut}\r\n  </tbody>\r\n</table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Parts","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from \"react-router-dom\";\nimport Cars from './Cars';\nimport './App.css';\nimport Navigation from './Navigation';\nimport CarPers from './CarPers';\nimport Parts from './parts';\nimport { Grommet } from 'grommet';\nfunction App() {\n  return (\n\n  <Router>\n    <Navigation/>\n    <Switch>\n    <Route path=\"/cars\" exact component={Cars} />\n    <Route path=\"/cars/:id\" component={CarPers} />\n    <Route path=\"/\" exact component={Home} />\n    <Route path=\"/parts\" exact component={Parts} />\n    </Switch>\n    </Router>\n  );\n}\nconst Home = ()=>{\n  return <h1>Главная</h1>\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}